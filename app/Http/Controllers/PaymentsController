<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use DB;
use App\Payments;
use App\Products;
use App\User;


class PaymentsController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {

        $payments = payments::where('UserID', auth()->user()->id)
        ->orderBy('name', 'desc')
        ->take(10)
        ->get();

        return view('payments.index');
    }

    public function autocomplete(Request $request)
    {
        $name = $request->query('name');
        $ngos = User::where('name' , 'LIKE', '%'.$name.'%')->orderBy('created_at', 'desc')->paginate(5);

        return $ngos;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create(Request $request)
    {
        $users = User::all();
        $ngos = Array();
        foreach ($users as $user) {
            if($user->hasRole('ngo'))
            {
                array_push($ngos , $user);
            }
        }
        return view('payments.create')->with('ngos' , $ngos)->with('productId' , $request->query('productId'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $this->validate($request, [ 
            'price' => 'required',
            'name' => 'required',
            'surname' => 'required',
            'phone_number' => 'required',
            'eposta' => 'required',
            'address' => 'required',
            'city' => 'required',
            'country' => 'required',
            'ZIP' => 'required',
            'credit_card_number' => 'required',
            'EXP' => 'required',
            'Card_Name' => 'required',
            'CVV' => 'required',
            'productId' => 'required'
        ]);


        $product = Products::find($request->input('productId'));
        $product->sold = TRUE;
        $product->buyer = auth()->user()->id;
        $product->save();

        //CREATE Payment For Shopping
        $payments = new payments;
        
        $payments->price = $request->input('price');
        $payments->name = $request->input('name');
        $payments->surname = $request->input('surname');
        $payments->phone_number = $request->input('phone_number');
        $payments->eposta = $request->input('eposta');
        $payments->address = $request->input('address');
        $payments->city = $request->input('city');
        $payments->country = $request->input('country');
        $payments->ZIP = $request->input('ZIP');
        $payments->credit_card_number = $request->input('credit_card_number');
        $payments->EXP = $request->input('EXP');
        $payments->Card_Name = $request->input('Card_Name');
        $payments->CVV = $request->input('CVV');

        $payments->save();


        return redirect('/success');

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
